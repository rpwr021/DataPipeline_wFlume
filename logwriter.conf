logwriter.sources=AvroIn
logwriter.sources.AvroIn.type=avro
logwriter.sources.AvroIn.bind=0.0.0.0
logwriter.sources.AvroIn.port=43414

# add logChannel to replicate to both
logwriter.sources.AvroIn.channels=mc1
logwriter.channels=mc1

logwriter.channels.mc1.type=file
logwriter.channels.mc1.checkpointDir=/var/log/logmgmt/logwriter/ckpt
logwriter.channels.mc1.dataDirs=/var/log/logmgmt/logwriter/ckpt/data

logwriter.channels.mc1.checkpointInterval=30000
logwriter.channels.mc1.maxFileSize=2146435071
logwriter.channels.mc1.minimumRequiredSpace=524288000
logwriter.channels.mc1.capacity=1000000
logwriter.channels.mc1.transactionCapacity=1000
logwriter.sources.AvroIn.interceptors = rgx_app
logwriter.sources.AvroIn.interceptors.rgx_app.type = regex_extractor
logwriter.sources.AvroIn.interceptors.rgx_app.regex = TYPE:(\\w+)
logwriter.sources.AvroIn.interceptors.rgx_app.serializers = s1
logwriter.sources.AvroIn.interceptors.rgx_app.serializers.s1.name = APPTYPE

# Add logSink
logwriter.sinks=HadoopOut

logwriter.sinks.HadoopOut.type=hdfs
logwriter.sinks.HadoopOut.channel=mc1
logwriter.sinks.HadoopOut.hdfs.path=/data/logmgmt/%{APPTYPE}/%{host}/%y%m%d
logwriter.sinks.HadoopOut.hdfs.useLocalTimeStamp = true
logwriter.sinks.HadoopOut.hdfs.filePrefix=Application_%{APPTYPE}.log


logwriter.sinks.HadoopOut.hdfs.fileType = CompressedStream
logwriter.sinks.HadoopOut.hdfs.codeC = snappyCodec

logwriter.sinks.HadoopOut.hdfs.batchSize=1000
logwriter.sinks.HadoopOut.hdfs.rollCount=10000
logwriter.sinks.HadoopOut.hdfs.rollInterval=0
logwriter.sinks.HadoopOut.hdfs.rollSize=1000000000
